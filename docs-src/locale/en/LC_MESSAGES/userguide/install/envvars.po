# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, B2W Digital
# This file is distributed under the same license as the Asgard API package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Asgard API \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-05 12:20-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../userguide/install/envvars.rst:2
msgid "Variáveis de Ambiente"
msgstr ""

#: ../../userguide/install/envvars.rst:5
msgid ""
"Toda a parametrização da asgard API é feita via variáveis de ambiente. "
"Nesse documento vamos explicar cada uma das variáveis de ambiente (ENVs) "
"que a Asgard API conhece."
msgstr ""

#: ../../userguide/install/envvars.rst:7
msgid ""
"Todas as ENVs são lidas no arquivo :py:mod:`asgard.conf`. Todas as envs "
"estão sendo movidas para o objeto :py:class:`asgard.conf.Settings`, que é"
" um objeto ``BaseSettings`` do pydantic (`docs <https://pydantic-"
"docs.helpmanual.io/#settings>`_)."
msgstr ""

#: ../../userguide/install/envvars.rst:10
msgid ""
"As envs estão sempre prefixadas com algum valor. O prefixo padrão, caso "
"você não escolhada nada é ``ASGARD_``."
msgstr ""

#: ../../userguide/install/envvars.rst:12
msgid "Abaixo está a transcrição completa do modulo :py:mod:`asgard.conf`."
msgstr ""

#: ../../userguide/install/envvars.rst:18
msgid ""
"Todos os atributos da classe :py:class:`asgard.conf.Settings` já lêm seus"
" valores de envs **com prefixo**."
msgstr ""

#: ../../userguide/install/envvars.rst:22
msgid "Lista de ENVs conhecidas pela Asgard API"
msgstr ""

#: ../../userguide/install/envvars.rst:24
msgid ""
"**Nota**: Todos nomes descritos aqui devem receber o prefixo ``ASGARD_`` "
"quando forem cridas as ENVs no momento de rodar a Asgard API."
msgstr ""

#: ../../userguide/install/envvars.rst:26
msgid "``MESOS_API_URLS``"
msgstr ""

#: ../../userguide/install/envvars.rst:27
msgid ""
"Obrigatório. Recebe uma lista, contendo os endereços de todos os mesos "
"que formam o cluster. Ex: ``[\"http://10.0.0.1:5050\", "
"\"http://10.0.0.2:5050\"]``"
msgstr ""

#: ../../userguide/install/envvars.rst:28
msgid "``DB_URL``"
msgstr ""

#: ../../userguide/install/envvars.rst:29
msgid ""
"Obrigatório. Recebe a URI de conexão com o banco de dados. Esse banco "
"guarda os dados relacionaos de usuários e contas. O código da Asgard API "
"usa `SQLAlchemy <https://www.sqlalchemy.org/>`_."
msgstr ""

#: ../../userguide/install/envvars.rst:30
msgid "``STATS_API_URL``"
msgstr ""

#: ../../userguide/install/envvars.rst:31
msgid ""
"Obrigatório. Endereço da API onde as estatísticas de uso de recursos das "
"apps serão gravadas. Atualmente Asgard API fala com `ElasticSearch "
"<https://www.elastic.co/pt/products/elasticsearch>`_."
msgstr ""

#: ../../userguide/install/envvars.rst:32
msgid "``SCHEDULED_JOBS_SERVICE_ADDRESS``"
msgstr ""

#: ../../userguide/install/envvars.rst:33
msgid ""
"Obrigatório. Endereço da API responsável pela gerência de tarefas "
"agendadas. Atualmente a asgard API suporta falar com o `Chronos "
"<https://mesos.github.io/chronos/docs/api.html>`_."
msgstr ""

#: ../../userguide/install/envvars.rst:34
msgid "``SCHEDULED_JOBS_SERVICE_AUTH``"
msgstr ""

#: ../../userguide/install/envvars.rst:35
msgid ""
"Opcional. Dados de autenticação para falar com a API de tarefas "
"agendadas. Recebe um objeto (:py:class:`asgard.conf.AuthSpec`) com user e"
" password. Ex: ``{\"user\": \"chronos\", \"password\": \"secret\"}``"
msgstr ""

#: ../../userguide/install/envvars.rst:36
msgid "``SCHEDULED_JOBS_DEFAULT_FETCH_URIS``"
msgstr ""

#: ../../userguide/install/envvars.rst:37
msgid ""
"Opcional. Recebe uma lista de objetos "
":py:class:`asgard.models.spec.fetch.FetchURLSpec`. Ex: ``[{\"uri\": "
"\"http://static.server.com.br/content.txt\"}, {\"uri\": "
"\"file:///etc/config.tar.bz2\"}]``"
msgstr ""

#~ msgid ""
#~ "Toda a parametrização da asgard API "
#~ "é feita via variáveis de ambiente. "
#~ "Nesse documento vamos explicar cada uma"
#~ " das variáveis de ambiente que a "
#~ "Asgard API conhece."
#~ msgstr ""

#~ msgid "Todas as ENVs são lidas no arquivo :py:`asgard.conf`."
#~ msgstr ""

#~ msgid "Todas as ENVs são lidas no arquivo :py:file:`asgard.conf`."
#~ msgstr ""

#~ msgid "Todas as ENVs são lidas no arquivo :py:class:`asgard.conf.Settings`."
#~ msgstr ""

#~ msgid "Todas as ENVs são lidas no arquivo :py:mod:`asgard.conf.Settings`."
#~ msgstr ""

#~ msgid "Todas as ENVs são lidas no arquivo :py:mod:`asgard.conf`."
#~ msgstr ""

#~ msgid ""
#~ "Todas as ENVs são lidas no arquivo"
#~ " :py:mod:`asgard.conf`. Todas as envs estão"
#~ " sendo movidas para o objeto "
#~ ":py:class:`asgard.conf.Settings`, que é um "
#~ "objeto `BaseSettings` do pydantic (`docs "
#~ "<https://pydantic-docs.helpmanual.io/#settings>`_)."
#~ msgstr ""

#~ msgid "noindex"
#~ msgstr ""

#~ msgid "no-index"
#~ msgstr ""

#~ msgid ""
#~ "ASGARD_SCHEDULED_JOBS_DEFAULT_FETCH_URIS: Recebe uma "
#~ "lista, contendo os endereços de todos"
#~ " os mesos que formam o cluster."
#~ msgstr ""

#~ msgid ""
#~ "``ASGARD_SCHEDULED_JOBS_DEFAULT_FETCH_URIS``: Recebe uma"
#~ " lista, contendo os endereços de "
#~ "todos os mesos que formam o "
#~ "cluster."
#~ msgstr ""

#~ msgid "``ASGARD_SCHEDULED_JOBS_DEFAULT_FETCH_URIS``"
#~ msgstr ""

#~ msgid ""
#~ "Obrigatório. Recebe uma lista, contendo "
#~ "os endereços de todos os mesos que"
#~ " formam o cluster. Ex: "
#~ "\"[\"http://10.0.0.1:5050\", \"http://10.0.0.2:5050\"]"
#~ msgstr ""

#~ msgid ""
#~ "Recebe uma lista, contendo os endereços"
#~ " de todos os mesos que formam o"
#~ " cluster."
#~ msgstr ""

#~ msgid ""
#~ "Opcional: Recebe uma lista de objetos"
#~ " :py:class:`asgard.models.spec.fetch.FetchURISpec`."
#~ msgstr ""

#~ msgid ""
#~ "Opcional: Recebe uma lista de objetos"
#~ " :py:class:`asgard.models.spec.fetch.FetchURLSpec`."
#~ msgstr ""

#~ msgid ""
#~ "Opcional: Recebe uma lista de objetos"
#~ " :py:class:`asgard.models.spec.fetch.FetchURLSpec`. Ex: "
#~ "``[{\"uri\": \"http://static.server.com.br/content.txt\"}, "
#~ "{\"uri\": \"file:///etc/config.tar.bz2\"}]``"
#~ msgstr ""

